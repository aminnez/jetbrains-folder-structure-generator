<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.aminnez.plugin.clean.CleanArchitecture</id>

    <name>Folder Structure Generator (Clean and Own)</name>

    <vendor email="aminnez@gmail.com" url="https://aminnez.com">Amin Nezampour</vendor>

    <description><![CDATA[
<h1>Folder Structure Generator Plugin</h1>
<h2>Overview</h2>
<p>Folder Structure Generator is a powerful plugin designed to help developers quickly set up and manage folder structures like Clean Architecture. It allows users to define custom structures using a simple JSON format within the settings panel, making it highly flexible and adaptable to different project architectures.</p>
<h2>Features</h2>
<ul>
<li><strong>Predefined Templates</strong>: Generate a Clean Architecture structure out of the box.</li>
<li><strong>Customizable Structures</strong>: Define your own folder structures using JSON.</li>
<li><strong>User-Friendly Settings Panel</strong>: Modify and manage folder structures with ease.</li>
<li><strong>Supports Multiple Architectures</strong>: Adaptable to various architectural patterns.</li>
</ul>
<h2>Installation</h2>
<ol>
<li>Download and install the plugin.</li>
<li>Open your project and access the plugin settings in tools section.</li>
<li>Define or select a folder structure template.</li>
</ol>
<h2>Usage</h2>
<ol>
<li>Right click on any folder in your project.</li>
<li>Select <strong>Structured Folder</strong> from <strong>New</strong> in the context menu.</li>
<li>Enter folder name (feature name).</li>
</ol>
<h2>Default Clean Architecture Template</h2>
<p>The plugin comes with a predefined Clean Architecture structure. Below is an example JSON configuration:</p>
<pre><code class="language-json">{
  &quot;domain&quot;: {
    &quot;type&quot;: &quot;d&quot;,
    &quot;children&quot;: {
      &quot;repository&quot;: { &quot;type&quot;: &quot;d&quot; },
      &quot;entities&quot;: { &quot;type&quot;: &quot;d&quot; }
    }
  },
  &quot;data&quot;: {
    &quot;type&quot;: &quot;d&quot;,
    &quot;children&quot;: {
      &quot;datasources&quot;: { &quot;type&quot;: &quot;d&quot; },
      &quot;dtoes&quot;: { &quot;type&quot;: &quot;d&quot; },
      &quot;repositories&quot;: { &quot;type&quot;: &quot;d&quot; }
    }
  },
  &quot;presentation&quot;: {
    &quot;type&quot;: &quot;d&quot;,
    &quot;children&quot;: {
      &quot;pages&quot;: {
        &quot;type&quot;: &quot;d&quot;,
        &quot;children&quot;: {
          &quot;page&quot;: { &quot;type&quot;: &quot;f&quot;, &quot;ext&quot;: &quot;dart&quot; }
        }
      },
      &quot;components&quot;: { &quot;type&quot;: &quot;d&quot; },
      &quot;providers&quot;: { &quot;type&quot;: &quot;d&quot; }
    }
  }
}
</code></pre>
<h2>Customization</h2>
<p>You can define your own structures by modifying the JSON configuration. The format follows these rules:</p>
<ul>
<li><strong>Folders</strong>: Defined with <code>{ &quot;type&quot;: &quot;d&quot; }</code>.</li>
<li><strong>Files</strong>: Defined with <code>{ &quot;type&quot;: &quot;f&quot;, &quot;ext&quot;: &quot;&lt;extension&gt;&quot; }</code>.</li>
<li><strong>Nested Folders</strong>: Use the <code>children</code> property to define subdirectories.</li>
</ul>
<p>Example:</p>
<pre><code class="language-json">{
  &quot;src&quot;: {
    &quot;type&quot;: &quot;d&quot;,
    &quot;children&quot;: {
      &quot;utils&quot;: { &quot;type&quot;: &quot;d&quot; },
      &quot;main&quot;: { &quot;type&quot;: &quot;f&quot;, &quot;ext&quot;: &quot;dart&quot; }
    }
  }
}
</code></pre>
<h2>Contributing</h2>
<ol>
<li>Fork the repository.</li>
<li>Create a new branch (<code>feature/my-feature</code>).</li>
<li>Commit your changes.</li>
<li>Push to the branch.</li>
<li>Open a pull request.</li>
</ol>
<h2>License</h2>
<p>This project is licensed under the MIT License.</p>
<p>Copyright (c) 2025 Amin Nezampour</p>
<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files, to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software.</p>
<p>See the LICENSE.md file for complete license details.</p>
<h2>Contact</h2>
<p>For any issues or feature requests, feel free to open an issue or contact the developer.</p>
<p><a href="https://aminnez.com/">Amin Nezampour</a></p>

]]></description>

    <depends>com.intellij.modules.platform</depends>

    <actions>
        <action class="com.aminnez.plugin.clean.action.ActionGenerate"
                description="Generate a new Clean/Own Architecture structure"
                id="com.aminnez.plugin.clean.action.ActionGenerate"
                icon="com.intellij.icons.ExpUiIcons.Actions.NewFolder"
                text="Structured Folder">
            <add-to-group anchor="after"
                          group-id="NewGroup" relative-to-action="NewDir"/>
        </action>

    </actions>

    <extensions defaultExtensionNs="com.intellij">

        <applicationConfigurable parentId="tools"
                                 displayName="Folder Structure Generator"
                                 instance="com.aminnez.plugin.clean.settings.SettingsConfigurable"/>
        <notificationGroup displayType="BALLOON" id="CleanArchitecture"/>
    </extensions>
</idea-plugin>